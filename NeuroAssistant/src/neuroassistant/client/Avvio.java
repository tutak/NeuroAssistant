package neuroassistant.client;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.net.*;
import java.util.*;
import org.apache.soap.rpc.*;
import org.apache.soap.encoding.SOAPMappingRegistry;
import org.apache.soap.*;
import org.apache.soap.encoding.soapenc.StringDeserializer;
import org.apache.soap.util.xml.QName;



/**
 *Classe che rappresenta l'interfaccia del login per gli utenti
 * @author Abdul Rasheed Tutakhail
 */
public class Avvio extends javax.swing.JFrame {

   
    public Avvio() {
        initComponents();
    }


    public void accedi() {
     
        
            String utente = "", pass = "",ruolo="";
            utente = user.getText();
            pass = password.getText();
            ruolo=buttonGroup.getSelection().getActionCommand();
            try {
                  URL indirizzo = new URL("http://localhost:8080/soap/servlet/rpcrouter");

                  //costruzione della chiamata
                  Call chiamata = new Call();
                  chiamata.setTargetObjectURI("urn:ServerNeuro");
                  chiamata.setMethodName("login");
                  chiamata.setEncodingStyleURI(Constants.NS_URI_SOAP_ENC);

                

                   SOAPMappingRegistry smr = new SOAPMappingRegistry();
                   StringDeserializer sd = new StringDeserializer ();
                   smr.mapTypes (Constants.NS_URI_SOAP_ENC, new QName ("", "return"), null, null, sd);
                   chiamata.setSOAPMappingRegistry(smr);
                  


                  //creazione dei parametri che vanno passati alla soap
                  Vector parametri = new Vector();
                  parametri.addElement(new Parameter("user", String.class, utente, null));
                  parametri.addElement(new Parameter("password", String.class, pass, null));
                  parametri.addElement(new Parameter("ruolo", String.class, ruolo, null));
                  chiamata.setParams(parametri);
                  try {
                        //Invocazione della RPC
                      
                        Response risposta = chiamata.invoke(indirizzo, "");
                        Parameter par = risposta.getReturnValue();
                        Object value = par.getValue();
                        String msg = String.valueOf(value);
                        if (msg.equals("si")) {
                              if (ruolo.equals("medico")) {
                                    new Medico().setVisible(true);
                                    dispose();
                              }

                              else if(ruolo.equals("amministratore")){
                                    new Amministratore().setVisible(true);
                                    dispose();
                                        }
                              else if(ruolo.equals("ricercatore")){
                                
                                    new Ricercatore().setVisible(true);
                                    dispose();
                                      }
                              else
                              {
                                    this.dispose();
                                                                  }
                        } else if(msg.equals("error-connessione")) {
                              JOptionPane.showMessageDialog(this, "La connessione Ã¨ fallita", "Errore", JOptionPane.ERROR_MESSAGE);
                                                              }
                        else if(msg.equals("error-query")){
                          JOptionPane.showMessageDialog(this, "Errore nella query", "Errore", JOptionPane.ERROR_MESSAGE);

                                                                }
                        else{  JOptionPane.showMessageDialog(this, "L'username e/o password sono sbagliati", "Errore", JOptionPane.ERROR_MESSAGE);
                            }
                  }

                  catch (SOAPException e) {
                        JOptionPane.showMessageDialog(this, "Attenzione si e verificato un errore", "Errore", JOptionPane.ERROR_MESSAGE);
                        System.out.println("Errore causato: ( " + e.getFaultCode() + " ): " + e.getMessage());
                                         }
            }

            catch (MalformedURLException ex) {
                  JOptionPane.showMessageDialog(this, "Attenzione si e verificato un errore", "Errore", JOptionPane.ERROR_MESSAGE);
                  System.out.println(ex.getMessage());
            }
      }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        user = new javax.swing.JFormattedTextField();
        login = new javax.swing.JButton();
        ricercatore = new javax.swing.JRadioButton();
        medico = new javax.swing.JRadioButton();
        amministratore = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cooltext558026900.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(password)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        login.setText("   LOGIN");
        login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/key.png"))); // NOI18N
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        buttonGroup.add(ricercatore);
        ricercatore.setActionCommand("ricercatore");
        ricercatore.setText("Ricercatore");
        ricercatore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ricercatoreActionPerformed(evt);
            }
        });

        buttonGroup.add(medico);
        medico.setActionCommand("medico");
        medico.setSelected(true);
        medico.setText("Medico");
        medico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicoActionPerformed(evt);
            }
        });

        buttonGroup.add(amministratore);
        amministratore.setActionCommand("amministratore");
        amministratore.setText("Amministratore");
        amministratore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amministratoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(medico)
                            .addComponent(ricercatore))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 254, Short.MAX_VALUE)
                        .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amministratore)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)))
                .addContainerGap(93, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(265, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(233, 233, 233))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(medico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ricercatore))
                    .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amministratore)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_passwordActionPerformed


    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed

        // TODO add your handling code here:
          String use = "", pass = "",ruolo="";
          use = user.getText();
          pass = password.getText();
          ruolo=buttonGroup.getSelection().getActionCommand();
          if ((use.equals("")) || (pass.equals("")) ) {
                JOptionPane.showMessageDialog(null, "Inserire un Username, Password e scegliere il Ruolo", "LOGIN ERROR", JOptionPane.ERROR_MESSAGE);
          }

          else {
                accedi();
          }
    }//GEN-LAST:event_loginActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_userActionPerformed

    private void medicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicoActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_medicoActionPerformed

    private void ricercatoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ricercatoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ricercatoreActionPerformed

    private void amministratoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amministratoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amministratoreActionPerformed

  
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                       UIManager.setLookAndFeel("com.seaglasslookandfeel.SeaGlassLookAndFeel");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Avvio.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Avvio.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Avvio.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Avvio.class.getName()).log(Level.SEVERE, null, ex);
                }

                new Avvio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton amministratore;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton login;
    private javax.swing.JRadioButton medico;
    private javax.swing.JPasswordField password;
    private javax.swing.JRadioButton ricercatore;
    private javax.swing.JFormattedTextField user;
    // End of variables declaration//GEN-END:variables

}
