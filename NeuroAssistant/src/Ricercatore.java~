import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.net.*;
import java.util.*;
import org.apache.soap.rpc.*;
import org.apache.soap.encoding.SOAPMappingRegistry;
import org.apache.soap.*;
import org.apache.soap.encoding.soapenc.StringDeserializer;
import org.apache.soap.util.xml.QName;
import java.awt.event.*;





/**Classe che rappresenta l'interfaccia per Ricercatore,da dove può aggiungere nuove Malattie nel database.
 *
 * @author Tutakhail & Baldelli
 */
public class Ricercatore extends javax.swing.JFrame {

    int sexint=0;
    String[] sexarra;
    String sexone;
    String sextwo;
    String description;
    int age;
    String agestr;
    String disease;
    String msg;
    String etastr;

    //SelectedEthnicities contiene il testo dei Checkbox dell'etnia scelti.
    List<String> selectedEthnicities = new ArrayList();
    JCheckBox[] ethnicities = new JCheckBox[5];
    String[] selec;
    //SelectedSintomi contiene il testo dei Checkbox dei sintomi scelti.
    List<String> selectedSintomi = new ArrayList();
    JCheckBox[] sintomi = new JCheckBox[10];
    String[] sintom;




    /** Creates new form Ricercatore */
    public Ricercatore() {
        initComponents();
        

    }
     private class EthnicityItemListener implements ItemListener {
        ArrayList selectedList;
        private EthnicityItemListener(ArrayList<String> selectedEthnicities) {
            this.selectedList = selectedEthnicities;
        }

        @Override
        public void itemStateChanged(ItemEvent e) {
            //Aggiungi o rimuovi il testo dei Checkbox secondo
            //Stato di Selezione
            if(e.getStateChange() == ItemEvent.SELECTED){
                this.selectedList.add(((JCheckBox)e.getSource()).getText());
            }else {
                this.selectedList.remove(((JCheckBox)e.getSource()).getText());
            }
            System.out.println(selectedList);
        }
    }


  private class SintomiItemListener implements ItemListener {
        ArrayList selectedSintomlist;
        private SintomiItemListener(ArrayList<String> selectedSintomi) {
            this.selectedSintomlist = selectedSintomi;
        }

        @Override
        public void itemStateChanged(ItemEvent e) {
            //Aggiungi o rimuovi il testo dei Checkbox secondo
            //Stato di Selezione
            if(e.getStateChange() == ItemEvent.SELECTED){
                this.selectedSintomlist.add(((JCheckBox)e.getSource()).getText());
            }else {
                this.selectedSintomlist.remove(((JCheckBox)e.getSource()).getText());
            }
            System.out.println(selectedSintomlist);
        }
    }








    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        malattia = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descrizione = new javax.swing.JTextArea();
        nuovo = new javax.swing.JButton();
        salva = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        eta = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        sessopanel = new javax.swing.JPanel();
        maschio = new javax.swing.JCheckBox();
        femmina = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();



 ethnicities[0] = new JCheckBox("Caucasico"); 
 	ethnicities[1] = new JCheckBox("Sud Asiatico");
	 ethnicities[2] = new JCheckBox("Sud-Est Asiatico");
 	ethnicities[3] = new JCheckBox("Nero");
	ethnicities[4] = new JCheckBox("Altro");
for(int i=0; i< ethnicities .length; i++) {
    ethnicities[i].addItemListener(new EthnicityItemListener((ArrayList<String>) selectedEthnicities ));
}


	 sintomi[0] = new JCheckBox("Agitazione"); 
 	 sintomi[1] = new JCheckBox("Convulsioni");
	 sintomi[2] = new JCheckBox("Poco Equilibro");
 	 sintomi[3] = new JCheckBox("Nausea");
	 sintomi[4] = new JCheckBox("Mal di Testa");
	 sintomi[5] = new JCheckBox("Emicrania"); 
 	 sintomi[6] = new JCheckBox("Schizofrenia");
	 sintomi[7] = new JCheckBox("Vomito");
 	 sintomi[8] = new JCheckBox("Stress");
	 sintomi[9] = new JCheckBox("Cefalee");
for(int i=0; i< sintomi .length; i++) {
    sintomi[i].addItemListener(new SintomiItemListener((ArrayList<String>) selectedSintomi ));
}




        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 17)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cooltext558026900.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel2.setText("Malattia");

      

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sintomi[0])
                    .addComponent( sintomi[2])
                    .addComponent( sintomi[4])
                    .addComponent( sintomi[6])
                    .addComponent( sintomi[8]))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sintomi[9])
                    .addComponent(sintomi[7])
                    .addComponent(sintomi[5])
                    .addComponent(sintomi[3])
                    .addComponent(sintomi[1]))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sintomi[0])
                    .addComponent(sintomi[1]))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sintomi[2])
                    .addComponent(sintomi[3]))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sintomi[4])
                    .addComponent(sintomi[5]))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sintomi[6])
                    .addComponent(sintomi[7]))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sintomi[8])
                    .addComponent(sintomi[9]))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel4.setText("Descrizione");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel3.setText("Sintomi");

        descrizione.setColumns(20);
        descrizione.setRows(5);
        jScrollPane1.setViewportView(descrizione);

        nuovo.setText("          NUOVO");
        nuovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.png"))); // NOI18N
        nuovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuovoActionPerformed(evt);
            }
        });

        salva.setText("          SALVA");
        salva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/salva.png"))); // NOI18N
        salva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel5.setText("Etnia");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel6.setText("Età");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15));
        jLabel7.setText("Sesso");

        sessopanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        maschio.setText("Maschio");
        maschio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maschioActionPerformed(evt);
            }
        });

        femmina.setText("Femmina");
        femmina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femminaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sessopanelLayout = new javax.swing.GroupLayout(sessopanel);
        sessopanel.setLayout(sessopanelLayout);
        sessopanelLayout.setHorizontalGroup(
            sessopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessopanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sessopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(femmina)
                    .addComponent(maschio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        sessopanelLayout.setVerticalGroup(
            sessopanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessopanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(femmina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maschio)
                .addContainerGap(10, Short.MAX_VALUE))
        );


    jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());





        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ethnicities[0])
                        .addGap(18, 18, 18)
                        .addComponent(ethnicities[2]))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ethnicities[1])
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ethnicities[3])
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ethnicities[4])))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ethnicities[2])
                    .addComponent(ethnicities[0]))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ethnicities[1])
                    .addComponent(ethnicities[3])
                    .addComponent(ethnicities[4]))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );









        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(157, 157, 157)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(sessopanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(eta, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addComponent(jLabel2)))
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(salva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nuovo, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addGap(219, 219, 219))
            .addGroup(layout.createSequentialGroup()
                .addGap(536, 536, 536)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(589, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(501, 501, 501)
                .addComponent(malattia, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(600, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(nuovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(salva))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(malattia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(sessopanel, 0, 66, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(3, 3, 3)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)))
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuovoActionPerformed
        // TODO add your handling code here:
        new Ricercatore().setVisible(true);
}//GEN-LAST:event_nuovoActionPerformed

    private void salvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvaActionPerformed
        // TODO add your handling code here:
       disease=malattia.getText();
       etastr=eta.getText();
       age=java.lang.Integer.parseInt(etastr);
       description=descrizione.getText();

         sexarra=new String[sexint];
        if(sexint==1)
        sexarra[0]=sexone;
        else if(sexint==0)
            JOptionPane.showMessageDialog(null, "Bisogna specificare almeno un valore del campo sesso", "Errore", JOptionPane.ERROR_MESSAGE);
        else{
            sexarra[0]=sexone;
            sexarra[1]=sextwo;}

   




        selec=new String[selectedEthnicities.size()];
        selectedEthnicities.toArray(selec);
     

        sintom=new String[selectedSintomi.size()];
        selectedSintomi.toArray(sintom);
    
    


        agestr=eta.getText();
        if(agestr.equalsIgnoreCase(""))
               JOptionPane.showMessageDialog(null, "Il campo età non può essere vuoto", "Errore", JOptionPane.ERROR_MESSAGE);

        age=Integer.parseInt(agestr);
        if( age<=0 || age>=110){
            JOptionPane.showMessageDialog(null, "Il valore inserito nel campo età non è giusto", "Errore", JOptionPane.ERROR_MESSAGE);
                        }
            {



                            try {
                                  URL url = new URL("http://localhost:8080/soap/servlet/rpcrouter");
                                  //costruzione della chiamata
                                  Call chiamata = new Call();
                                  chiamata.setTargetObjectURI("urn:ServerNeuro");
                                  chiamata.setMethodName("aggiungi_malattia");
                                  chiamata.setEncodingStyleURI(Constants.NS_URI_SOAP_ENC);

                                   SOAPMappingRegistry smr = new SOAPMappingRegistry();
                                   StringDeserializer sd = new StringDeserializer ();
                                   smr.mapTypes (Constants.NS_URI_SOAP_ENC, new QName ("", "return"), null, null, sd);
                                   chiamata.setSOAPMappingRegistry(smr);


                                    //creazione dei parametri

                                    Vector parametri = new Vector();
                                    parametri.addElement(new Parameter("malattia", String.class, disease, null));
                                    parametri.addElement(new Parameter("age", int.class, age, null));
                                    parametri.addElement(new Parameter("descrizione", String.class, description, null));
                                    parametri.addElement(new Parameter("sexarra",String[].class, sexarra, null));
                                    parametri.addElement(new Parameter("selec",String[].class, selec, null));
                                    parametri.addElement(new Parameter("sintom",String[].class, sintom, null));

                                     chiamata.setParams(parametri);
                                     try {
                                              Response risp = chiamata.invoke(url, "");
                                              Parameter par = risp.getReturnValue();
                                              msg = (String) par.getValue();
                                              System.out.print(msg);
                                        
                                  }
                                     catch (SOAPException e) {
                                        System.out.println("Errore causata da: (" + e.getFaultCode() + ") :" + e.getMessage());
                                        msg = "errore";
                                  }

                            }
                            catch (MalformedURLException ex) {
                                  System.out.println("Exception: " + ex.getMessage());
                            }

                             if (msg.equals("si")) {
                                        JOptionPane.showMessageDialog(null, "La registrazione è avvenuta con successo", "REGISTRAZIONE", JOptionPane.INFORMATION_MESSAGE);

                                  }

                            else if(msg.equals("error-connessione")) {
                              JOptionPane.showMessageDialog(this, "La connessione è fallita", "Errore", JOptionPane.ERROR_MESSAGE);
                                    }
                            else if(msg.equals("error-query")){
                          JOptionPane.showMessageDialog(this, "A disease with exact parameters might already exist, query failed", "Errore", JOptionPane.ERROR_MESSAGE);

                                  }

                             else{
                                  JOptionPane.showMessageDialog(null, "The disease might already exist", "ATTENZIONE", JOptionPane.ERROR_MESSAGE);
                                         }






         }

    }//GEN-LAST:event_salvaActionPerformed

    private void femminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femminaActionPerformed
        // TODO add your handling code here:

        if(femmina.isSelected()){
            if(sexint==0){
              sexint++;
              sexone=femmina.getText();

            }

            else if(sexint==1){
                sexint++;
                sextwo=femmina.getText();
                     }
            else
                sexint--;
        
        


        }
    }//GEN-LAST:event_femminaActionPerformed

    private void maschioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maschioActionPerformed
        // TODO add your handling code here:
      

        if(maschio.isSelected()){
              if(sexint==0){
              sexint++;
              sexone=maschio.getText();

            }

            else if(sexint==1){
                sexint++;
                sextwo=maschio.getText();
            }
            else
                sexint--;
                


        }
    }//GEN-LAST:event_maschioActionPerformed

  

    

    private void malattiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malattiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_malattiaActionPerformed

   

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentAdded

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("com.seaglasslookandfeel.SeaGlassLookAndFeel");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Ricercatore.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Ricercatore.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Ricercatore.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Ricercatore.class.getName()).log(Level.SEVERE, null, ex);
                }
                new Ricercatore().setVisible(true);
                


            }
        });
      }

    // Variables declaration - do not modify//GEN-BEGIN:variables


    private javax.swing.JTextArea descrizione;

    private javax.swing.JFormattedTextField eta;
    private javax.swing.JCheckBox femmina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JFormattedTextField malattia;
    private javax.swing.JCheckBox maschio;

    private javax.swing.JButton nuovo;
  
    private javax.swing.JButton salva;
    
    private javax.swing.JPanel sessopanel;
 
    // End of variables declaration//GEN-END:variables


}
